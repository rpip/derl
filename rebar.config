%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% == Erlang Compiler ==

%% Erlang compiler options
{erl_opts, [ warn_unused_vars
           , warn_export_all
           , warn_shadow_vars
           , warn_unused_import
           , warn_unused_function
           , warn_bif_clash
           , warn_unused_record
           , warn_deprecated_function
           , warn_obsolete_guard
           , strict_validation
           , warn_export_vars
           , warn_exported_vars
           , warn_missing_spec
           , warn_untyped_record
           , debug_info]}.


%% == Cover ==

{cover_enabled, true}.

{cover_opts, [verbose]}.

%% == Dependencies ==

{deps, []}.

%% == Rebar profiles ==

{profiles, [
  {edoc,
   [{deps, [
            {edown,
             {git, "https://github.com/uwiger/edown.git", {tag, "0.7"}}}
           ]}
   ]},
  {test, [

          {deps, [
                  {xref_runner, "1.1.0"}

                 ]},
          {plugins, [
                     {coveralls,
                      {git, "https://github.com/markusn/coveralls-erl", {branch, "master"}}}
                    ]}
         ]}
 ]}.

%% == edoc ==
{edoc_opts, [
             {app_default, "http://www.erlang.org/doc/man"},
             {doclet, edown_doclet},
             {image, ""},
             {includes, ["include"]},
             {preprocess, true},
             {stylesheet, ""},
             {title, "Derl"}
            ]}.

%% == xref ==
{xref_checks, [
               deprecated_functions,
               deprecated_function_calls,
               locals_not_used,
               undefined_function_calls
              ]}.

%% == Dialyzer ==

{dialyzer, [ {warnings, [ no_return
                        , unmatched_returns
                        , error_handling
                        ]}
           , {plt_apps, top_level_deps}
           , {plt_extra_apps, []}
           , {plt_location, local}
           , {base_plt_apps, [stdlib, kernel]}
           , {base_plt_location, global}]}.

%% == Google Protocol Buffers ==
{erl_opts, [{i, "./_build/default/plugins/gpb/include"}]}.


{plugins, [
           {rebar3_gpb_plugin, "2.9.0" }
          ]}.

{gpb_opts, [{i, "protos"}]}.

{provider_hooks,
 [{pre, [
         {compile, {protobuf, compile}},
         {clean, {protobuf, clean}}
        ]}
 ]}.
